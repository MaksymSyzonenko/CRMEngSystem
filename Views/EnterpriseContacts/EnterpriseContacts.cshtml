@using CRMEngSystem.Models.ViewModels.Enterprise
@using CRMEngSystem.Models.ViewModels.Notify
@model EnterpriseContactsViewModel

<head>
    <style>
        .cards-container {
            margin-top: 10px;
            gap: 10px;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(calc(25% - 8px), 1fr));
            max-height: 60vh;
            overflow-y: scroll;
            overflow-x: hidden;
            padding-right: 8px;
        }

        @@media (min-width: 1600px) {
            .cards-container {
                grid-template-columns: repeat(auto-fill, minmax(calc(16% - 8px), 1fr));
            }
        }

        .cards-container::-webkit-scrollbar {
            width: 5px;
        }

        .cards-container::-webkit-scrollbar-track {
            background: #E1E2F3;
            border-radius: 3px;
        }

        .cards-container::-webkit-scrollbar-thumb {
            background: #4962E9;
            border-radius: 3px;
        }

            .cards-container::-webkit-scrollbar-thumb:hover {
                background: #59CDFF;
            }

        .card-data {
            background-color: white;
            border-radius: 5px;
            display: flex;
            flex-direction: column;
            padding: 15px;
        }

        .card-data-header {
            display: flex;
            flex-direction: row;
        }

            .card-data-header:hover span {
                color: #4962E9;
            }

            .card-data-header:hover img {
                outline: 2px solid #4962E9;
                outline-offset: 1px;
            }

        .card-data-footer {
            display: flex;
            flex-direction: column;
        }

            .card-data-footer img {
                height: 15px;
                width: 15px;
            }

        .card-data-header img {
            height: 35px;
            width: 35px;
            transition: border-color 0.3s ease;
            border-radius: 50%;
        }

        .card-data-header span {
            margin-left: 10px;
            font-size: 13px;
            color: #595586;
        }

        .card-data-footer span {
            font-size: 12px;
            color: #595586;
            align-self: flex-start;
        }

        .card-data-footer img {
            display: flex;
            text-align: right;
        }

        .card-data-footer a {
            border-bottom: 2px solid #E1E2F3;
            margin-top: 10px;
            padding: 0 5px;
        }

        .card-data a {
            text-decoration: none;
            display: flex;
            align-items: center;
        }

        .copy-container {
            width: 100%;
            height: 21px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-bottom: 2px solid #E1E2F3;
            margin-top: 10px;
            padding: 0 5px;
            cursor: pointer;
        }

            .copy-container span {
                overflow: hidden;
                text-overflow: ellipsis;
            }
    </style>
</head>
<body>
    @if (TempData["NotifyModal"] != null && (bool)TempData["NotifyModal"]!)
    {
        @await Html.PartialAsync("_NotifyModal", new NotifyModalViewModel { NotifyText = "Контакт успішно додано до підприємства!", IsError = false })
    }
    else if (TempData["ErrorNotifyModal"] != null && (bool)TempData["ErrorNotifyModal"]!)
    {
        @await Html.PartialAsync("_NotifyModal", new NotifyModalViewModel { NotifyText = "Сталася помилка при додаванні контакта.", IsError = true })
    }
    <div class="page-container">
        @await Html.PartialAsync("_EnterpriseMenuTab", Model)
        @Html.ActionLink("Додати контакт", "ContactCreate", "ContactCreate", new { EnterpriseId = Model.EntityId }, new { @class = "add-btn-fullwidth" })
        <div class="cards-container">
            @foreach (var entity in Model.Contacts)
            {
                <div class="card-data">
                    <a href="@Url.Action("ContactDetails","ContactDetails", new { EntityId = entity.ContactId})" class="card-data-header">
                        @if (entity.Image!.Length == 0)
                        {
                            <img src="~/images/contact/Contact_Empty_Image.png">
                        }
                        else
                        {
                            <img src="data:image/jpeg;base64,@(Convert.ToBase64String(entity.Image!))">
                        }
                        <span>@entity.Initials</span>
                    </a>
                    <div class="card-data-footer">
                        <div class="copy-container" onclick="copyToClipboard('@entity.PhoneNumber')"><span>@entity.PhoneNumber</span><img src="~/icons/Copy.svg" /></div>
                        <div class="copy-container" onclick="copyToClipboard('@entity.Email')"><span>@entity.Email</span><img src="~/icons/Copy.svg" /></div>
                    </div>
                </div>
            }
        </div>
    </div>
    
</body>
<script>
    function copyToClipboard(text) {
        var tempElement = document.createElement('textarea');
        tempElement.value = text;
        document.body.appendChild(tempElement);
        tempElement.select();
        document.execCommand('copy');
        document.body.removeChild(tempElement);
        alert("Дані скопійовані: " + text);
    }
</script>