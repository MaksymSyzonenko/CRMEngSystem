@using CRMEngSystem.Models.ViewModels.Order
@using CRMEngSystem.Models.ViewModels.Notify
@model OrderAccountingViewModel

<head>
    <style>
        .form-container {
            background-color: white;
            border-radius: 5px;
            padding: 15px;
            display: flex;
            flex-direction: column;
            gap: 10px;
            width: 100%;
        }

        .data-input {
            padding: 5px;
            border-radius: 5px;
            font-size: 12px;
            border: solid 1px #E1E2F3;
            background-color: transparent;
            color: #595586;
            outline: none;
            width: 100%;
        }

            .data-input::placeholder {
                color: #E1E2F3;
            }

        .button-container {
            display: flex;
            align-items: center;
            justify-content: flex-end;
            margin-top: 5px;
        }

        .form-container-row span {
            font-size: 12px;
            color: #595586;
            font-weight: bold;
        }

        .btn-container {
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: flex-end;
        }

        .form-container-row {
            display: flex;
            flex-direction: row;
            align-items: center;
            width: 100%;
            gap: 5px;
        }


        .header-row {
            width: 170px;
            box-sizing: border-box;
            flex-shrink: 0;
        }

        .select-checkbox {
            width: 100%;
            display: flex;
            align-items: center;
            flex-direction: row;
            padding: 0 5px;
        }

            .select-checkbox label {
                cursor: pointer;
                user-select: none;
                display: flex;
                align-items: center;
                justify-content: center;
            }

                .select-checkbox label span {
                    padding: 0 0 0 5px;
                }
    </style>
</head>
<body>
    @if (TempData["NotifyModal"] != null && (bool)TempData["NotifyModal"]!)
    {
        @await Html.PartialAsync("_NotifyModal", new NotifyModalViewModel { NotifyText = (string)TempData["NotifyText"]!, IsError = false })
    }
    else if (TempData["ErrorNotifyModal"] != null && (bool)TempData["ErrorNotifyModal"]!)
    {
        @await Html.PartialAsync("_NotifyModal", new NotifyModalViewModel { NotifyText = (string)TempData["NotifyText"]!, IsError = true })
    }
    <div class="page-container">
        @await Html.PartialAsync("_OrderMenuTab", Model)
        @using (Html.BeginForm("OrderAccounting", "OrderAccounting", FormMethod.Post, new { @class = "form-container" }))
        {
            @Html.HiddenFor(m => m.EntityId)
            <div class="form-container-row">
                <div class="header-row"><span>Основний отримувач: </span></div>
                @Html.TextBoxFor(m => m.Receiver, new { placeholder = "Пошта основного отримувача", @class = "data-input", required = "required" })
            </div>
            <div class="form-container-row">
                <div class="header-row"><span>Додатковий отримувач: </span></div>
                @Html.TextBoxFor(m => m.ExtraReceiver, new { placeholder = "Пошта додаткового отримувача (Якщо відсутня - залишити пустим)", @class = "data-input" })
            </div>
            <div class="form-container-row">
                <div class="header-row"><span>Курс: </span></div>
                @Html.DropDownList("Currency", new SelectList(new[] { "НБУ", "МВБ", "Комерційний Приватбанк" }), "Обрати курс", new { @required = "required", @class = "data-input" })
            </div>
            <div class="form-container-row">
                <div class="header-row"><span>Коментар: </span></div>
                @Html.TextBoxFor(m => m.Note, new { placeholder = "Коментар до листа (Якщо відсутній - залишити пустим)", @class = "data-input" })
            </div>
            @* <div class="form-container-row">
                <div class="header-row"><span>Доставка:</span></div>
                <div class="select-checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.IncludeShippingCost, new { id = "includeShippingCostCheckbox" })
                        <span>Включити доставку попозиційно у ціну обладнання</span>
                    </label>
                </div>
            </div>
            <div class="form-container-row">
                <div class="header-row"><span>Вартість доставки: </span></div>
                @Html.TextBoxFor(m => m.ShippingCost, new { id = "shippingCostInput", placeholder = "Вартість доставки", @class = "data-input", type = "text", inputmode = "numeric", pattern = "^\\d+([.,]?\\d+)*$", required = "required" })
            </div> *@
            <div class="btn-container"><input class="add-btn" value="Відправити лист" type="submit" style="width: 200px;" /></div>
        }
    </div>
</body>
@* 
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const checkbox = document.getElementById('includeShippingCostCheckbox');
        const shippingCostInput = document.getElementById('shippingCostInput');

        function toggleShippingCostInput() {
            if (checkbox.checked) {
                shippingCostInput.disabled = false;
                shippingCostInput.required = true;
            } else {
                shippingCostInput.disabled = true;
                shippingCostInput.required = false;
                shippingCostInput.value = '@Model.ShippingCost';
            }
        }
        toggleShippingCostInput();
        checkbox.addEventListener('change', toggleShippingCostInput);
    });
</script> *@
