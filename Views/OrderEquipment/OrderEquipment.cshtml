@using CRMEngSystem.Models.ViewModels.Order
@using CRMEngSystem.Models.ViewModels.Catalog
@using CRMEngSystem.Models.ViewModels.Notify
@using CRMEngSystem.Models.ViewModels.Resizer
@model OrderEquipmentViewModel

<head>
    <style>
        .tab-container {
            display: flex;
            flex-direction: column;
            gap: 10px;
            width: 100%;
        }

        .cards-container {
            display: flex;
            flex-direction: column;
            gap: 5px;
            max-height: 60vh;
            overflow-y: scroll;
            overflow-x: hidden;
            padding-right: 8px;
        }

            .cards-container::-webkit-scrollbar {
                width: 5px;
            }

            .cards-container::-webkit-scrollbar-track {
                background: #E1E2F3;
                border-radius: 3px;
            }

            .cards-container::-webkit-scrollbar-thumb {
                background: #4962E9;
                border-radius: 3px;
            }

                .cards-container::-webkit-scrollbar-thumb:hover {
                    background: #59CDFF;
                }

        .header-container {
            background-color: #DDE9FF;
            border-radius: 5px;
            padding: 5px 10px;
            display: inline-block;
            width: 100%;
        }

        .header-part {
            display: grid;
            grid-gap: 5px;
            grid-template-columns: 7% 36% 5% 9% 6% 6% 9% 7% calc(15% - 13px);
            padding-right: 13px;
            overflow: hidden;
        }

        .header-part-column {
            font-size: 12px;
            color: #4962E9;
            display: flex;
            align-items: center;
            justify-content: center;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            position: relative;
        }

        .header-part-column:nth-child(2) {
            display: flex;
            align-items: center;
            justify-content: flex-start;
        }

        .result-container{
            font-size: 12px;
            font-weight: bold;
            display: grid;
            grid-gap: 5px;
            grid-template-columns: 7% 36% 5% 9% 6% 6% 9% 7% calc(15% - 13px);
            padding-right: 13px;
            overflow: hidden;
        }

        .result-container-column{
            display: flex;
            align-items: center;
            justify-content: center;
            white-space: nowrap;
        }

        .result-container-column span{
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .result-container-column:nth-child(2) {
            justify-content: flex-end;
            display: flex;
            align-items: center;
        }

        .percent-input {
            background-color: white;
            width: 50px;
            height: 25px;
            border: 1px solid #595586;
            border-radius: 3px;
            color: #595586;
            outline: none;
            box-sizing: border-box;
            text-align: center;
            -moz-appearance: textfield;
        }

            .percent-input::-webkit-inner-spin-button,
            .percent-input::-webkit-outer-spin-button {
                -webkit-appearance: none;
                margin: 0;
            }

        .card-data {
            background-color: white;
            border-radius: 5px;
            grid-gap: 5px;
            display: grid;
            width: 100%;
            grid-template-columns: 7% 36% 5% 9% 6% 6% 9% 7% calc(15% - 13px);
            align-items: center;
            height: 23px;
            padding: 0 10px 0 10px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            flex-shrink: 0;
        }

            .card-data span {
                font-size: 12px;
                color: #595586;
                display: flex;
                align-items: center;
                justify-content: center;
            }

        .scrollable {
            height: 21px;
            display: flex;
            align-items: center;
            overflow-x: auto;
            overflow-y: hidden;
        }

            .scrollable span {
                display: inline-block;
                white-space: nowrap;
            }

            .scrollable::-webkit-scrollbar {
                height: 3px;
            }

            .scrollable::-webkit-scrollbar-thumb {
                background-color: #E1E2F3;
                border-radius: 2px;
            }

            .scrollable::-webkit-scrollbar-track {
                background-color: transparent;
                border-radius: 2px;
            }

            .scrollable::-webkit-scrollbar-thumb:hover {
                background-color: #59CDFF;
            }

        .card-data span:nth-child(2) {
            display: flex;
            align-items: center;
            justify-content: flex-start;
        }

        .card-data a:hover span {
            color: #4962E9;
        }

        .card-data a {
            text-decoration: none;
            display: flex;
            align-items: center;
        }

        .action-link-symbol {
            font-weight: bold;
            color: #595586;
        }

            .action-link-symbol:hover {
                color: #4962E9;
            }

        .code-link {
            font-size: 12px;
            color: #595586;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .code-link:hover {
                color: #4962E9;
            }

        .hidden {
            opacity: 0;
        }

        .visible {
            opacity: 1;
        }

        .percent-input-position {
            background-color: white;
            height: 18px;
            display: flex;
            justify-content: center;
            align-items: center;
            border: 2px solid #E1E2F3;
            border-radius: 3px;
            color: #595586;
            outline: none;
            box-sizing: border-box;
            text-align: center;
            -moz-appearance: textfield;
        }

            .percent-input-position::-webkit-inner-spin-button,
            .percent-input-position::-webkit-outer-spin-button {
                -webkit-appearance: none;
                margin: 0;
            }



    </style>
</head>
<body>
    @if (TempData["ErrorNotifyModal"] != null && (bool)TempData["ErrorNotifyModal"]!)
    {
        @await Html.PartialAsync("_NotifyModal", new NotifyModalViewModel { NotifyText = (string)TempData["NotifyText"]!, IsError = true })
    }
    else if (TempData["NotifyModal"] != null && (bool)TempData["NotifyModal"]!)
    {
        @await Html.PartialAsync("_NotifyModal", new NotifyModalViewModel { NotifyText = (string)TempData["NotifyText"]!, IsError = false })
    }
    <div class="page-container">
        @await Html.PartialAsync("_OrderMenuTab", Model)
        @Html.ActionLink("Додати обладнання", "CatalogList", "CatalogList", new CatalogListViewModel{ OrderId = Model.EntityId }, new { @class = "add-btn-fullwidth" })
        <div class="content hidden" data-page-identifier="OrderEquipment">
            @if(Model.EquipmentPositions.Count() != 0)
            {
                <div class="tab-container">
                    <div class="header-container">
                        <div class="header-part">
                            <div class="header-part-column">
                                @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "Код" })
                            </div>
                            <div class="header-part-column">
                                @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "Найменування" })
                            </div>
                            <div class="header-part-column">
                                @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "Склад" })
                            </div>
                            <div class="header-part-column">
                                @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "Прайс" })
                            </div>
                            <div class="header-part-column">
                                @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "Знижка" })
                            </div>
                            <div class="header-part-column">
                                @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "Націнка" })
                            </div>
                            <div class="header-part-column">
                                @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "Ціна" })
                            </div>
                            <div class="header-part-column">
                                @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "Кількість" })
                            </div>
                            <div class="header-part-column">
                                @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "Заг. ціна" })
                            </div>
                        </div>
                    </div>
                    
                        <div class="cards-container">
                            @foreach (var entity in Model.EquipmentPositions)
                            {
                                @using (Html.BeginForm("OrderEquipmentUpdate", "OrderEquipmentUpdate", FormMethod.Post))
                                {
                                    <div class="card-data">
                                        <a href="@Url.ActionLink("OrderEquipmentDetails", "OrderEquipmentDetails", new { EntityId = entity.EquipmentOrderPositionId })" class="code-link">@entity.EquipmentCode</a>
                                        <a href="@Url.ActionLink("CatalogDetails", "CatalogDetails", new { EntityId = entity.EquipmentCatalogPositionId})" class="scrollable"><span>@entity.NameUA</span></a>
                                        <span>@entity.QuantityToTake / @entity.QuantityInStock шт</span>
                                        <span>@entity.BasePrice £</span>
                                        <span>
                                            @Html.TextBox("Discount", entity.Discount, new { @class = "percent-input-position", type = "number", min = "1", max = "100", step = "1", pattern = "[0-9]*" })
                                        </span>
                                        <span>
                                            @Html.TextBox("MarkUp", entity.MarkUp, new { @class = "percent-input-position", type = "number", min = "1", max = "100", step = "1", pattern = "[0-9]*" })
                                        </span>
                                        @Html.Hidden("OrderId", Model.EntityId)
                                        @Html.Hidden("EquipmentOrderPositionId", entity.EquipmentOrderPositionId)
                                        <input type="submit" style="visibility: hidden; position: absolute;" />
                                        <span>@entity.SellPrice €</span>
                                        <span style="display: flex; gap: 5px; justify-content: center;">
                                            @Html.ActionLink("-", "OrderEquipmentRemove", "OrderEquipmentRemove", new { EntityId = entity.OrderId, EquipmentOrderPositionId = entity.EquipmentOrderPositionId, ActionName = "OrderEquipment", ControllerName = "OrderEquipment" }, new { @class = "action-link-symbol" })
                                            @entity.Quantity шт
                                            @Html.ActionLink("+", "OrderEquipmentAdd", "OrderEquipmentAdd", new { EntityId = entity.OrderId, EquipmentOrderPositionId = entity.EquipmentOrderPositionId, ActionName = "OrderEquipment", ControllerName = "OrderEquipment" }, new { @class = "action-link-symbol" })
                                        </span>
                                        <span>@(entity.SellPrice * @entity.Quantity) €</span>
                                    </div>
                                }
                            }
                        </div>
                    
                    <div style="padding: 5px 10px; display: inline-block; background-color: #E1E2F3; color: #595586; border-radius: 5px;">
                        <div class="result-container">
                            <div></div>
                            <span class="result-container-column">
                                Всього:
                            </span>
                            <span class="result-container-column">
                                —
                            </span>
                            <span class="result-container-column">
                                —
                            </span>
                            <span class="result-container-column">
                                @using (Html.BeginForm("OrderTotalDiscountUpdate", "OrderTotalPriceValuesUpdate", FormMethod.Post))
                                {
                                    @Html.TextBox("Discount", null, new{ placeholder = "0%", @class="percent-input", type="number", min = "1", max = "100", step = "1", pattern = "[0-9]*"})
                                    @Html.Hidden("OrderId", Model.EntityId)
                                }
                            </span>
                            <span class="result-container-column">
                                @using (Html.BeginForm("OrderTotalMarkUpUpdate", "OrderTotalPriceValuesUpdate", FormMethod.Post))
                                {
                                    @Html.TextBox("MarkUp", null, new{ placeholder = "0%", @class="percent-input", type="number", min = "1", max = "100", step = "1", pattern = "[0-9]*"})
                                    @Html.Hidden("OrderId", Model.EntityId)
                                }
                            </span>
                            <span class="result-container-column">
                                —
                            </span>
                            <span class="result-container-column">
                                @Model.EquipmentPositions.Sum(equipment => equipment.Quantity) шт
                            </span>
                            <span class="result-container-column">
                                @Model.EquipmentPositions.Sum(equipment => equipment.SellPrice * equipment.Quantity) €
                            </span>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</body>
<script src="~/js/resizerScript.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const contentElement = document.querySelector('.content');
        const pageIdentifier = contentElement.getAttribute('data-page-identifier');
        initColumnResizer(pageIdentifier);
    });
</script>

