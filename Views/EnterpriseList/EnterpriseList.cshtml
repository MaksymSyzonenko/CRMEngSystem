@using CRMEngSystem.Models.ViewModels.Enterprise
@using CRMEngSystem.Models.ViewModels.Notify
@using CRMEngSystem.Models.ViewModels.Resizer
@model EnterpriseListViewModel

<head>
    <link rel="stylesheet" href="~/css/enterpriseListStyleSheet.css" />
    <script src="~/js/googleMapsScript.js" ></script>
    <style>
        .hidden {
            opacity: 0;
        }

        .visible {
            opacity: 1;
        }
    </style>
</head>
<body>
    @if (TempData["NotifyModal"] != null && (bool)TempData["NotifyModal"]!)
    {
        @await Html.PartialAsync("_NotifyModal", new NotifyModalViewModel { NotifyText = (string)TempData["NotifyText"]!, IsError = false })
    }
    else if (TempData["ErrorNotifyModal"] != null && (bool)TempData["ErrorNotifyModal"]!)
    {
        @await Html.PartialAsync("_NotifyModal", new NotifyModalViewModel { NotifyText = (string)TempData["NotifyText"]!, IsError = true })
    }
    <div class="page-container">
        @using (Html.BeginForm("EnterpriseList", "EnterpriseList", FormMethod.Get, new { @class = "search", style = "height: 30px;" }))
        {
            <img src="~/icons/Search.svg" />
            @Html.TextBoxFor(m => m.SearchGeneral, new { placeholder = "Загальний пошук", @Value = Model.SearchGeneral })
            JoinSearches("SearchGeneral");
        }
        @Html.ActionLink("Додати підприємство", "EnterpriseCreate", "EnterpriseCreate", null, new { @class = "add-btn-fullwidth" })
        <div class="content hidden" data-page-identifier="EnterpriseList">
            <div class="header-container">
                <div class="header-part">
                    @{
                        EnterpriseListViewModel CreateViewModelWithSort(bool? sortEnterpriseId, bool? sortAlphabetStreet, bool? sortAlphabetCity, bool? sortAlphabetRegion)
                        => new()
                        {
                            SearchGeneral = Model.SearchGeneral,
                            SearchName = Model.SearchName,
                            SearchStreet = Model.SearchStreet,
                            SearchRegion = Model.SearchRegion,
                            SearchCity = Model.SearchCity,
                            SortEnterpriseId = sortEnterpriseId,
                            SortAlphabetStreet = sortAlphabetStreet,
                            SortAlphabetCity = sortAlphabetCity,
                            SortAlphabetRegion = sortAlphabetRegion,
                            NumberItemsPerPage = Model.NumberItemsPerPage,
                            TotalPageCount = Model.TotalPageCount
                        };
                    }
                    <div class="header-part-column">
                        @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "Підприємство", SortActionName = "EnterpriseList", SortControllerName = "EnterpriseList", SortRouteValues = CreateViewModelWithSort(true, null, null, null) })
                    </div>
                    <div class="header-part-column">
                        @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "Адреса", SortActionName = "EnterpriseList", SortControllerName = "EnterpriseList", SortRouteValues = CreateViewModelWithSort(null, true, null, null) })
                    </div>
                    <div class="header-part-column">
                        @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "Населений пункт", SortActionName = "EnterpriseList", SortControllerName = "EnterpriseList", SortRouteValues = CreateViewModelWithSort(null, null, true, null) })
                    </div>
                    <div class="header-part-column">
                        @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "Регіон / Область", SortActionName = "EnterpriseList", SortControllerName = "EnterpriseList", SortRouteValues = CreateViewModelWithSort(null, null, null, true) })
                    </div>
                    <div class="header-part-column">
                        @await Html.PartialAsync("_Resizer", new ResizerViewModel { TitleName = "На карті" })
                    </div>
                </div>
                <div class="header-part">
                    @{
                        void JoinSearches(string currentQuery)
                        {
                            if (!string.IsNullOrEmpty(Model.SearchGeneral) && currentQuery != "SearchGeneral")
                                @Html.HiddenFor(m => m.SearchGeneral)

                            if (!string.IsNullOrEmpty(Model.SearchName) && currentQuery != "SearchName")
                                @Html.HiddenFor(m => m.SearchName)

                            if (!string.IsNullOrEmpty(Model.SearchStreet) && currentQuery != "SearchStreet")
                                @Html.HiddenFor(m => m.SearchStreet)

                            if (!string.IsNullOrEmpty(Model.SearchRegion) && currentQuery != "SearchRegion")
                                @Html.HiddenFor(m => m.SearchRegion)

                            if (!string.IsNullOrEmpty(Model.SearchCity) && currentQuery != "SearchCity")
                                @Html.HiddenFor(m => m.SearchCity)

                            @Html.HiddenFor(m => m.NumberItemsPerPage)
                        }
                    }
                    @using (Html.BeginForm("EnterpriseList", "EnterpriseList", FormMethod.Get, new { @class = "search" }))
                    {
                        <img src="~/icons/Search.svg" />
                        @Html.TextBoxFor(m => m.SearchName, new { placeholder = "Пошук", @Value = Model.SearchName })
                        JoinSearches("SearchName");
                        <input type="submit" style="visibility: hidden;" />
                    }
                    @using (Html.BeginForm("EnterpriseList", "EnterpriseList", FormMethod.Get, new { @class = "search" }))
                    {
                        <img src="~/icons/Search.svg" />
                        @Html.TextBoxFor(m => m.SearchStreet, new { placeholder = "Пошук", @Value = Model.SearchStreet })
                        JoinSearches("SearchStreet");
                        <input type="submit" style="visibility: hidden;" />
                    }
                    @using (Html.BeginForm("EnterpriseList", "EnterpriseList", FormMethod.Get, new { @class = "search" }))
                    {
                        <img src="~/icons/Search.svg" />
                        @Html.TextBoxFor(m => m.SearchRegion, new { placeholder = "Пошук", @Value = Model.SearchRegion })
                        JoinSearches("SearchRegion");
                        <input type="submit" style="visibility: hidden;" />
                    }
                    @using (Html.BeginForm("EnterpriseList", "EnterpriseList", FormMethod.Get, new { @class = "search" }))
                    {
                        <img src="~/icons/Search.svg" />
                        @Html.TextBoxFor(m => m.SearchCity, new { placeholder = "Пошук", @Value = Model.SearchCity })
                        JoinSearches("SearchCity");
                        <input type="submit" style="visibility: hidden;" />
                    }
                </div>
            </div>
            <div class="cards-container">
                @foreach (var entity in Model.Entities)
                {
                    @await Html.PartialAsync("_EnterpriseDataCard", entity)
                }
            </div>
            @await Html.PartialAsync("_Pagination", Model)
        </div>
    </div>
</body>
<script src="~/js/resizerScript.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const contentElement = document.querySelector('.content');
        const pageIdentifier = contentElement.getAttribute('data-page-identifier');
        initColumnResizer(pageIdentifier);
    });
</script>
